<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- File generated by Telosys Tools Generator ( version 2.1.1 ) - Date 2015-10-28 ( Time 11:00:54 ) -->

<div xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:s="http://www.springframework.org/tags" xmlns:form="http://www.springframework.org/tags/form" 
     xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" xmlns:input="urn:jsptagdir:/WEB-INF/tags/input" 
     version="2.0">
<jsp:directive.page contentType="text/html;charset=UTF-8"/>

<div class="bs-example">
    <nav role="navigation" class="navbar navbar-default">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" data-target="#navbarCollapse" data-toggle="collapse" class="navbar-toggle">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="#" class="navbar-brand">Brand</a>
        </div>
        <!-- Collection of nav links and other content for toggling -->
        <div id="navbarCollapse" class="collapse navbar-collapse">
            <ul class="nav navbar-nav">
                <li><a href="/backpacker4/user/home">Home</a></li>
                <li class="active"><a href="/backpacker4/user/feedback1">Your feedback</a></li>
                <li><a href="/backpacker4/user/search/form">Search</a></li>
               <li><a href="/backpacker4/user/places">Where are we?</a></li>
                <li><a href="/backpacker4/user/list">Who are we?</a></li>
                <li><a href="/backpacker4/user/form">Profile</a></li>
            </ul>
        </div>
    </nav>
</div>

<div class="container">
  <div class="jumbotron">
    <h2>Your feedback</h2>
    <p>Let us know which place you visited and how it was!</p> 
  </div>
  <div class="row">
    <div class="col-sm-3">
      <p>link 1</p>
      <p>link 2</p>
      <p>link 3</p>
      <p>link 4</p>
    </div>
    <div class="col-sm-9">
      <div class="row">
		<c:if test="${not empty succesmessage}">
		    <div class="alert alert-success" role="alert">
			  	${succesmessage}
			  </div>
		</c:if>
		<c:if test="${not empty message}">
			<c:set var="pac_input" scope="page" value="${pac_input}"/>
			<c:set var="comment" scope="page" value="${comment}"/>
			<c:set var="typeinfoid" scope="page" value="${typeinfoid}"/>
			<c:set var="filenames" scope="page" value="${filenames}"/>
		    <div class="alert alert-danger" role="alert">
			  	${message}
			</div>
		</c:if>
	  </div>
    <form:form method="POST" action="/backpacker4/user/feedback1/updatefiles?${_csrf.parameterName}=${_csrf.token}"
            modelAttribute="uploadForm" enctype="multipart/form-data">
    <input type="hidden" id="feedbackid" name="feedbackid" value="${feedback.id}" />
    <div class="row">
    <div class="container, col-sm-12">
    <input id="pac-input" name="pac-input" value="${pac_input}" class="controls" type="text" onchange="getPosition()" placeholder="Enter a location" required="required"/>
		    <div id="type-selector" class="controls">
		      <input type="radio" name="type" id="changetype-all" checked="checked" />
		      <label for="changetype-all">All</label>
		
		      <input type="radio" name="type" id="changetype-establishment" />
		      <label for="changetype-establishment">Establishments</label>
		
		      <input type="radio" name="type" id="changetype-address" />
		      <label for="changetype-address">Addresses</label>
		
		      <input type="radio" name="type" id="changetype-geocode" />
		      <label for="changetype-geocode">Geocodes</label>
		    </div>
		    <div id="map" style="height: 300px;"></div>
	 </div>
	 </div>  
<div class="row">
<div class="container">
					<div class="form-group">
<!-- 						<label for="latitude">latitude:</label> -->
						<input type="hidden" name="latitude" id="latitude" value="${position.latitude}" /> 
<!-- 						<label for="longitude">longitude:</label> -->
						<input type="hidden" name="longitude" id="longitude" value="${position.longitude}" /> 
<!-- 						<label for="country">country:</label> -->
						<input type="hidden" name="country" id="country" value="${position.country}" /> 
<!-- 						<label for="city">city:</label> -->
						<input type="hidden" name="city" id="city" value="${position.city }" /> 
					</div>
				</div>
	</div>
	<div class="row">
		<div class="form-group">
		  <label for="typeinfo">Select list:</label>
		  <select class="form-control" id="typeinfo" name="typeinfo">
		  	<c:forEach items="${typeinfolist}" var="item" varStatus="loop">
		  		<c:choose>
				    <c:when test="${item.id eq typeinfoid}">
				   		<option selected="selected">${item.description}</option>
				    </c:when>
				    <c:otherwise>
				       <option>${item.description}</option>
				    </c:otherwise>
				</c:choose>
			</c:forEach>
		  </select>
		</div>
		</div>
		
		<div class="row">
			  <label for="comment">Comment:</label>
			  <textarea class="form-control" rows="5"  name="comment" id="comment">${comment}</textarea>
		</div>
		<div class="row">
		<div class="container">
					<div class="form-group"> 
            <p>Select files to upload. Press Add button to add more file
                inputs. Attention: only jpeg files are accepted!</p>
 
            <table id="fileTable">
                <tr>
                    <td><input name="files[0]" type="file" /></td>
                </tr>
                <tr>
                    <td><input name="files[1]" type="file" /></td>
                </tr>
            </table>
            <br />
<!--             <input type="submit" value="Upload" /> -->
            <input id="addFile" type="button" value="Add File" />
					</div>
		</div>
		<c:forEach items="${filenames}" var="item" varStatus="loop">
            <div class="thumbnail, col-sm-1" heigth="150">
				<img src="${pageContext.request.contextPath}/TempImages/${item}" width="100%" alt="no picture available"/>
			</div>
         </c:forEach>
         <c:forEach items="${photolist}" var="photo" varStatus="loop">
            <div class="thumbnail, col-sm-1" heigth="150">
				<img src="${pageContext.request.contextPath}/${photo.id}_FULL.jpg" width="100%" alt="no picture available"/>
				<a class="btn btn-danger btn-xs" href="/backpacker4/user/photo/delete?feedbackid=${feedback.id}&amp;photoid=${photo.id}">
				  <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
				</a>
			</div>
         </c:forEach>
		</div>
		<!-- ACTION BUTTONS -->
				<div class="form-group">
    				<div class="col-sm-offset-4 col-sm-2">
						<!-- "CANCEL" button ( HREF link ) -->
		 				<s:url var="cancelButtonURL" value="/" />
						<a role="button" class="btn btn-default btn-block" href="${cancelButtonURL}"><s:message code="cancel"/></a>
					</div>
    				<div class="col-sm-2">
						<!-- "SAVE" button ( SUBMIT button ) -->
						<button type="submit" class="btn btn-primary btn-lg btn-block"><s:message code="save"/></button>
					</div>
				</div>
		</form:form>
		</div>
		</div>

 <script>
 <![CDATA[
var marker;
var map;
function initMap() {
  //GLOBAL VARIABLE MAP for access everywhere
  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: 51, lng: 4},
    zoom: 1
  });
  var input = (document.getElementById('pac-input'));

  var types = document.getElementById('type-selector');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  //GLOBAL VARIABLE
  marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  autocomplete.addListener('place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);
    
    getPosition(place.geometry.location);
    
    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
    infowindow.open(map, marker);
  });

  // Sets a listener on a radio button to change the filter type on Places
  // Autocomplete.
  function setupClickListener(id, types) {
    var radioButton = document.getElementById(id);
    radioButton.addEventListener('click', function() {
      autocomplete.setTypes(types);
    });
  }

  setupClickListener('changetype-all', []);
  setupClickListener('changetype-address', ['address']);
  setupClickListener('changetype-establishment', ['establishment']);
  setupClickListener('changetype-geocode', ['geocode']);
}
]]>
   </script>
   <script>
   function getPosition(latlng){
	
   var lat = latlng.lat();
   var lng = latlng.lng();
//    alert("position changed!" + lat + "--" + lng);

   var lg = document.getElementById("longitude");
   var lt = document.getElementById("latitude");

   lg.value = "" + lng; 
   lt.value = "" + lat;
   codeLatLng(lat, lng);
   }
   </script>

<script src="${googleAPIurl}" async="async" defer="defer">
function dummy(){}
</script>

<script type="text/javascript">
<![CDATA[
//Get the country and city from the latitude and longitude
function codeLatLng(lat, lng) {
	var latlng = new google.maps.LatLng(lat, lng);
	geocoder = new google.maps.Geocoder();
	geocoder.geocode({'latLng': latlng}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        console.log("results : " + results);
        if (results[1]) {
         //formatted address
//          alert(results[0].formatted_address);
        //find country name
         for (var i=0; i < results[0].address_components.length; i++) {
            for (var b=0;b < results[0].address_components[i].types.length;b++) {

            //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                if (results[0].address_components[i].types[b] == "locality") {
                    //this is the object you are looking for
                    city= results[0].address_components[i];
                    var ct = document.getElementById("city");
                    ct.value = "" + city.long_name; 
                }
                if (results[0].address_components[i].types[b] == "country") {
                    //this is the object you are looking for
                    country= results[0].address_components[i];
                    var co = document.getElementById("country");
                    co.value = "" + country.long_name; 
                }
            }
        }
        //city data
//         alert("city: " + city.short_name + " " + city.long_name + " country: " + country.short_name + " " + country.long_name);
        


        } else {
          alert("No results found");
        }
      } else {
        alert("Geocoder failed due to: " + status);
      }
    });
  }
]]>
</script>

<script>
<![CDATA[
document.getElementById('image').addEventListener('change', function(){
    var helper="Files ready for upload: <br />";
	for(i=0; i<this.files.length;i++){
	var file = this.files[i];
	helper += file.name + "(" + file.size + "kB)<br />";
	}
    document.getElementById('fileinfo').innerHTML= helper ;
    // This code is only for demo ...
    console.log("name : " + file.name);
    console.log("size : " + file.size);
    console.log("type : " + file.type);
    console.log("date : " + file.lastModified);
}, false);
]]>
</script>
<script>
<![CDATA[
    $(document).ready( function() {
       //add more file components if Add is clicked
       $('#addFile').click(
         function() {
             var fileIndex = $('#fileTable tr').children().length;
//              alert(fileIndex);
             $('#fileTable').append("<tr><td><input type=\"file\" name=\"files[" + fileIndex + "]\" /></td></tr>");
         });

   });
 ]]>
</script>

</div>
</div>

