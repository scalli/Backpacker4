<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- File generated by Telosys Tools Generator ( version 2.1.1 ) - Date 2015-10-28 ( Time 11:00:54 ) -->

<div xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:s="http://www.springframework.org/tags" xmlns:form="http://www.springframework.org/tags/form" 
     xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" xmlns:input="urn:jsptagdir:/WEB-INF/tags/input"
     xmlns:spring="http://www.springframework.org/tags" 
     version="2.0">
<jsp:directive.page contentType="text/html;charset=UTF-8"/>
<jsp:output omit-xml-declaration="yes"/>


	<div class="container">
		<fieldset class="col-sm-12 bordure">
			<legend class="legende"><s:message code="appuser"/></legend>
		
			<util:message message="${message}" messages="${messages}" />
			
	    	<s:url value="${saveAction}" var="url_form_submit" />
			<form:form onload="getLocation1()" class="form-horizontal" enctype="multipart/form-data" modelAttribute="appuser" cssClass="well form-horizontal" method="POST" action="${url_form_submit}?${_csrf.parameterName}=${_csrf.token}">
				<form:errors path="*" cssClass="alert alert-danger" element="div" />

<c:if test="${mode != 'create'}">
				<!-- Store data in hidden fields in order to be POST even if the field is disabled -->
				<form:hidden path="id" />
</c:if>
<c:if test="${mode == 'create'}">
				<!-- Input ID 0 when we create new user, Autoincrement in MYSQL will generate new ID -->
				<form:hidden path="id" value='0' />
</c:if>
 
				<!-- PRIMARY KEY FIELD : id -->
<!-- 				<div class="form-group"> -->
<!-- 					The field label is defined in the messages file (for i18n) -->
<!-- 					<label for="appuser_id" class="col-sm-2 control-label"><s:message code="appuser.id"/></label> -->
<!-- 					<div class="col-sm-10"> -->
<!-- 						<form:input id="appuser_id" path="id" class="form-control" maxLength="20" disabled="${mode != 'create'}" /> -->
<!-- 						<form:errors id="appuser_id_errors" path="id" cssClass="label label-danger" /> -->

<!-- 					</div> -->
<!-- 				</div> -->
 
				<!-- DATA FIELD : firstname -->
				<div class="form-group">
					<!-- The field label is defined in the messages file (for i18n) -->
					<label for="appuser_firstname" class="col-sm-2 control-label"><s:message code="appuser.firstname"/></label>
					<div class="col-sm-10">
  						<form:input id="appuser_firstname" path="firstname" class="form-control" maxLength="100"  />
						<form:errors id="appuser_firstname_errors" path="firstname" cssClass="label label-danger" />

					</div>
				</div>

 
				<!-- DATA FIELD : lastname -->
				<div class="form-group">
					<!-- The field label is defined in the messages file (for i18n) -->
					<label for="appuser_lastname" class="col-sm-2 control-label"><s:message code="appuser.lastname"/></label>
					<div class="col-sm-10">
  						<form:input id="appuser_lastname" path="lastname" class="form-control" maxLength="100"  />
						<form:errors id="appuser_lastname_errors" path="lastname" cssClass="label label-danger" />

					</div>
				</div>

 
				<!-- DATA FIELD : email -->
				<div class="form-group">
					<!-- The field label is defined in the messages file (for i18n) -->
					<label for="appuser_email" class="col-sm-2 control-label"><s:message code="appuser.email"/></label>
					<div class="col-sm-10">
  						<form:input type="email" id="appuser_email" path="email" class="form-control" maxLength="150"  />
						<form:errors id="appuser_email_errors" path="email" cssClass="label label-danger" />

					</div>
				</div>

 
				<!-- DATA FIELD : username -->
				<div class="form-group">
					<!-- The field label is defined in the messages file (for i18n) -->
					<label for="appuser_username" class="col-sm-2 control-label"><s:message code="appuser.username"/></label>
					<div class="col-sm-10">
  						<form:input id="appuser_username" name="appuser_username" path="username" class="form-control" maxLength="50"  />
						<form:errors id="appuser_username_errors" path="username" cssClass="label label-danger" />
						<span id="username_message"></span>
					</div>
				</div>

 
				<!-- DATA FIELD : userpassword -->
				<div class="form-group">
					<!-- The field label is defined in the messages file (for i18n) -->
					<label for="appuser_userpassword" class="col-sm-2 control-label"><s:message code="appuser.userpassword"/></label>
					<div class="col-sm-10">
  						<form:input id="appuser_userpassword" path="userpassword" class="form-control" maxLength="50"  />
						<form:errors id="appuser_userpassword_errors" path="userpassword" cssClass="label label-danger" />

					</div>
				</div>

				<div class="form-group">
					<label for="image">Image (in JPEG format only):</label>
					<input name="image" id="image" type="file"/>
					<div id="fileinfo"></div>
				</div>
				
				<div class="form-group">
					<label for="latitude">latitude:</label>
					<input type="text" name="latitude" id="latitude" value="latitude" /> 
					<label for="longitude">longitude:</label>
					<input type="text" name="longitude" id="longitude" value="longitude" /> 
					<label for="country">country:</label>
					<input type="text" name="country" id="country" value="country" /> 
					<label for="city">city:</label>
					<input type="text" name="city" id="city" value="city" /> 
				</div>

				<!-- ACTION BUTTONS -->
				<div class="form-group">
<!-- 					<div class="col-sm-offset-2 col-sm-2"> -->
<!-- 						<c:if test="${mode != 'create'}"> -->
<!-- 							"DELETE" button ( HREF link ) -->
<!-- 							<s:url var="deleteButtonURL" value="/appuser/delete/${appuser.id}" /> -->
<!-- 							<a role="button" class="btn btn-danger btn-block" href="${deleteButtonURL}"><s:message code="delete"/></a> -->
<!-- 						</c:if> -->
<!-- 					</div> -->
    				<div class="col-sm-offset-4 col-sm-2">
						<!-- "CANCEL" button ( HREF link ) -->
		 				<s:url var="cancelButtonURL" value="/appuser" />
						<a role="button" class="btn btn-default btn-block" href="${cancelButtonURL}"><s:message code="cancel"/></a>
					</div>
    				<div class="col-sm-2">
						<!-- "SAVE" button ( SUBMIT button ) -->
						<button type="submit" class="btn btn-primary btn-lg btn-block"><s:message code="save"/></button>
					</div>
				</div>
			</form:form>
			
				<p id="demo">Here comes the current position.</p>
				<div class="mapholder" id="mapholder" height="400" width="700">Empty mapholder</div>
				 
<script>
$('#appuser_username').change(doAjaxPost);
function doAjaxPost() {
	        // get the form values
      		var name = $('#appuser_username').val();
	        alert("naam opgehaald:" + name);
	        $.ajax({
	        type: "GET",
	        url: "/backpacker4/Ajax/CheckUsername",
	        data: "name=" + name,
	        success: function(response){
	        // we have the response
	        alert("response:" + response);
	        if (response == false) {
                   $("#username_message").html("Duplicate username, choose another");
               }
	        else {$("#username_message").html("Valid username");}
   			 },
    		error: function(e){
    		alert('Error: ' + e);
	        }
 			});
  			}
 </script>

<script src="${reverseGeoloactionURL}">function dummy(){}</script>

<script>
window.onload=getLocation1;
var x = document.getElementById("demo");

//is not being used
//TODO: remove when finalizing project
function getLocation(){
	var watchId = null;
	if (navigator.geolocation) {
		var optn = {
				enableHighAccuracy : true,
				timeout : Infinity,
				maximumAge : 0
		};
	watchId = navigator.geolocation.watchPosition(showPosition, showError, optn);
	} else {
			alert('Geolocation is not supported in your browser');
	}
}

function getLocation1() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition2, showError);
    } else {
        x.innerHTML = "Geolocation is not supported by this browser.";
    }
}

//werkt in Chrome en Firefox maar toont geen marker
function showPosition1(position) {
    var latlon = position.coords.latitude + "," + position.coords.longitude;

    x.innerHTML = "Your current position is: <br/> Latitude: " + position.coords.latitude + 
    "<br />Longitude: " + position.coords.longitude; 
    
    var lg = document.getElementById("longitude");
    var lt = document.getElementById("latitude");

    lg.value = "" + position.coords.longitude; 
    lt.value = "" + position.coords.latitude;
    
    var lat = position.coords.latitude;
    var lng = position.coords.longitude;
    codeLatLng(lat, lng);
    var imgurl = "'http://maps.googleapis.com/maps/api/staticmap?center="
    +latlon+"&#038;zoom=14&#038;size=400x300&#038;sensor=false'";
    document.getElementById("mapholder").innerHTML = "<img src=" + imgurl + "  />"
}

//Werkt in Firefox, maar niet in Chrome
function showPosition2(position)
{
	x.innerHTML = "Your current position is: <br/> Latitude: " + position.coords.latitude + 
    "<br />Longitude: " + position.coords.longitude; 
	
	var lg = document.getElementById("longitude");
    var lt = document.getElementById("latitude");

    lg.value = "" + position.coords.longitude; 
    lt.value = "" + position.coords.latitude;
    
    var lat = position.coords.latitude;
    var lng = position.coords.longitude;
    codeLatLng(lat, lng);
	
	var latitude = position.coords.latitude;
    var longitude = position.coords.longitude;
    var coords = new google.maps.LatLng(latitude, longitude);

    var mapOptions = {
    zoom: 15,
    center: coords,
    mapTypeControl: true,
    mapTypeId: google.maps.MapTypeId.ROADMAP
};

//create the map, and place it in the HTML map div
map = new google.maps.Map(
document.getElementById("mapholder"), mapOptions
);

//place the initial marker
var marker = new google.maps.Marker({
position: coords,
map: map,
title: "Current location!"
});
}


//is not being used
//TODO: remove when finalizing project
function showPosition(position) {
	
	x.innerHTML = "Your current position is: <br/> Latitude: " + position.coords.latitude + 
    "<br />Longitude: " + position.coords.longitude;
	
	 var lg = document.getElementById("longitude");
	 var lt = document.getElementById("latitude");
	 var country = document.getElementById("country");
	 var city = document.getElementById("city");

	 lg.value = "" + position.coords.longitude; 
	 lt.value = "" + position.coords.latitude;
	 codeLatLng(lat, lng);
	 
	
	var googlePos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
	var mapOptions = {
		zoom : 12,
		center : googlePos,
		mapTypeId : google.maps.MapTypeId.ROADMAP
	};
	var mapObj = document.getElementById("mapholder");
	var googleMap = new google.maps.Map(mapObj, mapOptions);
		
	var markerOpt = {
		map : googleMap,
		position : googlePos,
		title : 'Hi , I am here',
		animation : google.maps.Animation.DROP
	};
	var googleMarker = new google.maps.Marker(markerOpt);
	var geocoder = new google.maps.Geocoder();
	geocoder.geocode({
		'latLng' : googlePos
		}, function(results, status) {
			if (status == google.maps.GeocoderStatus.OK) {
			if (results[1]) {
				var popOpts = {
					content : results[1].formatted_address,
					position : googlePos
				};
				var popup = new google.maps.InfoWindow(popOpts);
				alert("showPosition");
				google.maps.event.addListener(googleMarker, 'click', function() {
					popup.open(googleMap);
			});
			} else {
				alert("No results found");
			}
			} else {
				alert("Geocoder failed due to: " + status);
			}
		});
}

function showError(error) {
    switch(error.code) {
        case error.PERMISSION_DENIED:
            x.innerHTML = "User denied the request for Geolocation."
            break;
        case error.POSITION_UNAVAILABLE:
            x.innerHTML = "Location information is unavailable."
            break;
        case error.TIMEOUT:
            x.innerHTML = "The request to get user location timed out."
            break;
        case error.UNKNOWN_ERROR:
            x.innerHTML = "An unknown error occurred."
            break;
    }
}

</script>

<script type="text/javascript">
<![CDATA[
//Get the country and city from the latitude and longitude
function codeLatLng(lat, lng) {
    var latlng = new google.maps.LatLng(lat, lng);
	geocoder = new google.maps.Geocoder();
	geocoder.geocode({'latLng': latlng}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        console.log("results : " + results);
        if (results[1]) {
         //formatted address
         alert(results[0].formatted_address);
        //find country name
         for (var i=0; i < results[0].address_components.length; i++) {
            for (var b=0;b < results[0].address_components[i].types.length;b++) {

            //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                if (results[0].address_components[i].types[b] == "locality") {
                    //this is the object you are looking for
                    city= results[0].address_components[i];
                    var ct = document.getElementById("city");
                    ct.value = "" + city.long_name; 
                }
                if (results[0].address_components[i].types[b] == "country") {
                    //this is the object you are looking for
                    country= results[0].address_components[i];
                    var co = document.getElementById("country");
                    co.value = "" + country.long_name; 
                }
            }
        }
        //city data
//         alert("city: " + city.short_name + " " + city.long_name + " country: " + country.short_name + " " + country.long_name);
        


        } else {
          alert("No results found");
        }
      } else {
        alert("Geocoder failed due to: " + status);
      }
    });
  }
]]>
</script>
<script>
document.getElementById('image').addEventListener('change', function(){
    var file = this.files[0];
    document.getElementById('fileinfo').innerHTML="file ready for upload: " + file.name + "(" + file.size + ")";
    // This code is only for demo ...
    console.log("name : " + file.name);
    console.log("size : " + file.size);
    console.log("type : " + file.type);
    console.log("date : " + file.lastModified);
}, false);
</script>

	    </fieldset>
	</div>	
</div>



