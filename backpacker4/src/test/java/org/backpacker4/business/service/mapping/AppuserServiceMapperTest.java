/*
 * Created on 28 okt 2015 ( Time 11:01:16 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.backpacker4.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.backpacker4.bean.Appuser;
import org.backpacker4.bean.jpa.AppuserEntity;
import org.backpacker4.bean.jpa.PositionEntity;
import org.backpacker4.bean.jpa.PhotoEntity;
import org.backpacker4.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class AppuserServiceMapperTest {

	private AppuserServiceMapper appuserServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		appuserServiceMapper = new AppuserServiceMapper();
		appuserServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'AppuserEntity' to 'Appuser'
	 * @param appuserEntity
	 */
	@Test
	public void testMapAppuserEntityToAppuser() {
		// Given
		AppuserEntity appuserEntity = new AppuserEntity();
		appuserEntity.setFirstname(mockValues.nextString(100));
		appuserEntity.setLastname(mockValues.nextString(100));
		appuserEntity.setEmail(mockValues.nextString(150));
		appuserEntity.setUsername(mockValues.nextString(50));
		appuserEntity.setUserpassword(mockValues.nextString(50));
		appuserEntity.setPosition(new PositionEntity());
		appuserEntity.getPosition().setId(mockValues.nextLong());
		appuserEntity.setPhoto(new PhotoEntity());
		appuserEntity.getPhoto().setId(mockValues.nextLong());
		
		// When
		Appuser appuser = appuserServiceMapper.mapAppuserEntityToAppuser(appuserEntity);
		
		// Then
		assertEquals(appuserEntity.getFirstname(), appuser.getFirstname());
		assertEquals(appuserEntity.getLastname(), appuser.getLastname());
		assertEquals(appuserEntity.getEmail(), appuser.getEmail());
		assertEquals(appuserEntity.getUsername(), appuser.getUsername());
		assertEquals(appuserEntity.getUserpassword(), appuser.getUserpassword());
		assertEquals(appuserEntity.getPosition().getId(), appuser.getIdPosition());
		assertEquals(appuserEntity.getPhoto().getId(), appuser.getIdPhoto());
	}
	
	/**
	 * Test : Mapping from 'Appuser' to 'AppuserEntity'
	 */
	@Test
	public void testMapAppuserToAppuserEntity() {
		// Given
		Appuser appuser = new Appuser();
		appuser.setFirstname(mockValues.nextString(100));
		appuser.setLastname(mockValues.nextString(100));
		appuser.setEmail(mockValues.nextString(150));
		appuser.setUsername(mockValues.nextString(50));
		appuser.setUserpassword(mockValues.nextString(50));
		appuser.setIdPosition(mockValues.nextLong());
		appuser.setIdPhoto(mockValues.nextLong());

		AppuserEntity appuserEntity = new AppuserEntity();
		
		// When
		appuserServiceMapper.mapAppuserToAppuserEntity(appuser, appuserEntity);
		
		// Then
		assertEquals(appuser.getFirstname(), appuserEntity.getFirstname());
		assertEquals(appuser.getLastname(), appuserEntity.getLastname());
		assertEquals(appuser.getEmail(), appuserEntity.getEmail());
		assertEquals(appuser.getUsername(), appuserEntity.getUsername());
		assertEquals(appuser.getUserpassword(), appuserEntity.getUserpassword());
		assertEquals(appuser.getIdPosition(), appuserEntity.getPosition().getId());
		assertEquals(appuser.getIdPhoto(), appuserEntity.getPhoto().getId());
	}

}