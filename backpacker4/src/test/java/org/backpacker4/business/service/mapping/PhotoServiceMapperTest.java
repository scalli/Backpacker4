/*
 * Created on 28 okt 2015 ( Time 11:01:17 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.backpacker4.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.backpacker4.bean.Photo;
import org.backpacker4.bean.jpa.PhotoEntity;
import org.backpacker4.bean.jpa.PositionEntity;
import org.backpacker4.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class PhotoServiceMapperTest {

	private PhotoServiceMapper photoServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		photoServiceMapper = new PhotoServiceMapper();
		photoServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'PhotoEntity' to 'Photo'
	 * @param photoEntity
	 */
	@Test
	public void testMapPhotoEntityToPhoto() {
		// Given
		PhotoEntity photoEntity = new PhotoEntity();
		photoEntity.setDescription(mockValues.nextString(100));
		photoEntity.setDatetaken(mockValues.nextDate());
		photoEntity.setComment(mockValues.nextString(2147483647));
		photoEntity.setFullphoto(mockValues.nextString(1000));
		photoEntity.setThumbnail(mockValues.nextString(1000));
		photoEntity.setPosition(new PositionEntity());
		photoEntity.getPosition().setId(mockValues.nextLong());
		
		// When
		Photo photo = photoServiceMapper.mapPhotoEntityToPhoto(photoEntity);
		
		// Then
		assertEquals(photoEntity.getDescription(), photo.getDescription());
		assertEquals(photoEntity.getDatetaken(), photo.getDatetaken());
		assertEquals(photoEntity.getComment(), photo.getComment());
		assertEquals(photoEntity.getFullphoto(), photo.getFullphoto());
		assertEquals(photoEntity.getThumbnail(), photo.getThumbnail());
		assertEquals(photoEntity.getPosition().getId(), photo.getIdPosition());
	}
	
	/**
	 * Test : Mapping from 'Photo' to 'PhotoEntity'
	 */
	@Test
	public void testMapPhotoToPhotoEntity() {
		// Given
		Photo photo = new Photo();
		photo.setDescription(mockValues.nextString(100));
		photo.setDatetaken(mockValues.nextDate());
		photo.setComment(mockValues.nextString(2147483647));
		photo.setFullphoto(mockValues.nextString(1000));
		photo.setThumbnail(mockValues.nextString(1000));
		photo.setIdPosition(mockValues.nextLong());

		PhotoEntity photoEntity = new PhotoEntity();
		
		// When
		photoServiceMapper.mapPhotoToPhotoEntity(photo, photoEntity);
		
		// Then
		assertEquals(photo.getDescription(), photoEntity.getDescription());
		assertEquals(photo.getDatetaken(), photoEntity.getDatetaken());
		assertEquals(photo.getComment(), photoEntity.getComment());
		assertEquals(photo.getFullphoto(), photoEntity.getFullphoto());
		assertEquals(photo.getThumbnail(), photoEntity.getThumbnail());
		assertEquals(photo.getIdPosition(), photoEntity.getPosition().getId());
	}

}