/*
 * Created on 28 okt 2015 ( Time 11:01:16 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.backpacker4.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.backpacker4.bean.Album;
import org.backpacker4.bean.jpa.AlbumEntity;
import org.backpacker4.bean.jpa.AppuserEntity;
import org.backpacker4.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class AlbumServiceMapperTest {

	private AlbumServiceMapper albumServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		albumServiceMapper = new AlbumServiceMapper();
		albumServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'AlbumEntity' to 'Album'
	 * @param albumEntity
	 */
	@Test
	public void testMapAlbumEntityToAlbum() {
		// Given
		AlbumEntity albumEntity = new AlbumEntity();
		albumEntity.setAlbumname(mockValues.nextString(100));
		albumEntity.setComment(mockValues.nextString(2147483647));
		albumEntity.setDatealbum(mockValues.nextDate());
		albumEntity.setAppuser(new AppuserEntity());
		albumEntity.getAppuser().setId(mockValues.nextLong());
		
		// When
		Album album = albumServiceMapper.mapAlbumEntityToAlbum(albumEntity);
		
		// Then
		assertEquals(albumEntity.getAlbumname(), album.getAlbumname());
		assertEquals(albumEntity.getComment(), album.getComment());
		assertEquals(albumEntity.getDatealbum(), album.getDatealbum());
		assertEquals(albumEntity.getAppuser().getId(), album.getIdUser());
	}
	
	/**
	 * Test : Mapping from 'Album' to 'AlbumEntity'
	 */
	@Test
	public void testMapAlbumToAlbumEntity() {
		// Given
		Album album = new Album();
		album.setAlbumname(mockValues.nextString(100));
		album.setComment(mockValues.nextString(2147483647));
		album.setDatealbum(mockValues.nextDate());
		album.setIdUser(mockValues.nextLong());

		AlbumEntity albumEntity = new AlbumEntity();
		
		// When
		albumServiceMapper.mapAlbumToAlbumEntity(album, albumEntity);
		
		// Then
		assertEquals(album.getAlbumname(), albumEntity.getAlbumname());
		assertEquals(album.getComment(), albumEntity.getComment());
		assertEquals(album.getDatealbum(), albumEntity.getDatealbum());
		assertEquals(album.getIdUser(), albumEntity.getAppuser().getId());
	}

}